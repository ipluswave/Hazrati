- is_homepage = params[:controller] == "homepage" && params[:action] == "index"
- is_category_page = !params[:category].blank?
- if is_homepage && (!is_category_page)
  = render :partial => 'homepage/origin_hompage'
- else
  = render :partial => 'layouts/head'
  - body_class = @body_class_name ? @body_class_name : '';
  - is_default_page = true
  %body{:class => body_class}

    #sidewinder-wrapper

      -# Render railsContext here before any react component gets rendered
      = prepend_render_rails_context("")

      %noscript
        .noscript-padding
          -# Noscript content will be positioned here

      - if FeatureFlagHelper.feature_enabled?(:topbar_v1)
        - if(search_mode != :keyword || @view_type.eql?("map"))
          - maps_key = MarketplaceHelper.google_maps_key(@current_community.id)
          - key_param = maps_key ? "&key=#{maps_key}" : ""
          = javascript_include_tag "https://maps.googleapis.com/maps/api/js?libraries=places#{key_param}"
        - if(@view_type.eql?("map"))
          = javascript_include_tag "markerclusterer.js"
        - props = topbar_props
        - cache props do
          = react_component("TopbarApp", props: props, prerender: true, id: 'topbar-container')
      - else 
        - if @show_categories && search_params && search_path
          = render partial: 'layouts/global_header', locals: header_props().merge({search_params: search_params, selected_category: selected_category})
        - else
          = render partial: 'layouts/global_header', locals: header_props()
        
      - if display_expiration_notice?
        = render partial: "layouts/expiration_notice",
            :locals => {external_plan_service_login_url: admin_plan_path}

      - content_for(:page_content) do
        %section.marketplace-lander
          - if @big_cover_photo
            .coverimage
              %figure.marketplace-cover.fluidratio
                .lander-content.marketplace-lander-content
                  = yield :title_header
          - elsif !(is_homepage && FeatureFlagHelper.feature_enabled?(:topbar_v1))
            .coverimage
              %figure.marketplace-cover-small.fluidratio
              .coverimage-fade{:class => yield(:coverfade_class)}
                %figure.marketplace-cover-small-fade.fluidratio
            .title-container
              .title-header-wrapper
                .marketplace-title-header
                  = yield :title_header

        %article.page-content{class: is_homepage && !@big_cover_photo ? 'no-cover-photo' : ''}
          .wrapper-fulid
            = render :partial => "layouts/notifications"
            = yield
            - if display_branding_info?
              = render partial: "layouts/non_whitelabel_branding", locals: {link_to_sharetribe: "https://www.sharetribe.com/?utm_source=#{@current_community.ident}.sharetribe.com&utm_medium=referral&utm_campaign=nowl-footer"}
      -#
        This is not pretty, but works.
        On homepage, we want to wrap the whole page content (search bar and the "real" content) to a form, so that
        pressing send from either search bar of filter list will send all the form fields

      - if is_homepage
        %form{method: "get", id: "homepage-filters"}
          - # New top bar search params are in different form and they have to be retained here
          - search_params = ["q", "lc", "ls", "boundingbox", "distance_max"]
          - excluded_params = search_params unless FeatureFlagHelper.feature_enabled?(:topbar_v1)
          - params.except("action", "controller", "view", "utf8", *excluded_params).each do |param, value|
            - unless CustomFieldSearchParams.custom_field_search_param?(param) || param.match(/^price_/)
              = hidden_field_tag param, value
          = hidden_field_tag "view", @view_type
          = content_for(:page_content)
      - else
        = content_for(:page_content)

      -# Most of the JavaScript should be for performance reasons at the end of the body

      -# load Facebook SDK for the whole page
      = render :partial => "layouts/facebook_sdk"
      = render :partial => "layouts/global_footer"

      = render :partial => "layouts/noscript"
      - if is_default_page
        = render :partial => "layouts/online_script"
      = yield :page_script
      - if is_default_page
        = javascript_include_tag 'theme.js'
      = yield :page_second_script
      